name: Day 1 - CMake & CI

on:
  push:
    branches: [ main, template, 'fix/*', 'feature/*', 'day*' ] # CI will trigger on main, template, fix, feature, and day-specific branches
    paths:
      - 'day1-cmake-ci/**' # CI will only trigger on changes to day1-cmake-ci directory
  pull_request: # CI will trigger on any pull request changing day1-cmake-ci directory
    paths:
      - 'day1-cmake-ci/**'

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }} # CI will run on all supported OSes
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code # CI will checkout the code from the repository
      uses: actions/checkout@v4 # without this, the runner won't have access to your code

    - name: Install CMake (Ubuntu) # CI will install CMake on target platform
      if: matrix.os == 'ubuntu-latest'
      run: |
        if command -v sudo >/dev/null 2>&1; then
          sudo apt-get update && sudo apt-get install -y cmake build-essential
        else
          apt-get update && apt-get install -y cmake build-essential
        fi

    - name: Install CMake (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install cmake

    - name: Install CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: choco install cmake

    - name: Configure project (Windows) # run the CMake build configuration step  
      if: runner.os == 'Windows'
      working-directory: day1-cmake-ci
      run: cmake -B build -G "Visual Studio 17 2022" # -G is the generator flag, and "Visual Studio 17 2022" is the generator name for Visual Studio 2022

    - name: Configure project (Unix) # run the CMake build configuration step
      if: runner.os != 'Windows'
      working-directory: day1-cmake-ci
      run: cmake -B build -DCMAKE_BUILD_TYPE=Debug # -DCMAKE_BUILD_TYPE=Debug is the build type flag, needed in Unix at the configuration step

    - name: Build project (Windows) # run the CMake build step
      if: runner.os == 'Windows'
      working-directory: day1-cmake-ci
      run: cmake --build build --config Debug # --config Debug is the build type flag, needed in Windows at the build step

    - name: Build project (Unix) # run the CMake build step
      if: runner.os != 'Windows'
      working-directory: day1-cmake-ci
      run: cmake --build build

    - name: Run tests (Windows) # run tests with CTest (Windows only - the --config Debug flag is required and not supported on Unix)
      if: runner.os == 'Windows'
      working-directory: day1-cmake-ci/build
      run: ctest --verbose --config Debug # --config Debug is needed in Windows at the test step

    - name: Run tests (Unix) # run tests with CTest
      if: runner.os != 'Windows'
      working-directory: day1-cmake-ci/build
      run: ctest --verbose